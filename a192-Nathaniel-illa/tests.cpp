// Test definitions. Do NOT edit this file!
#define CATCH_CONFIG_MAIN // defines main() automatically
#include <iostream>
#include <string>
#include "catch.hpp"
#include "main.hpp"
// tests for exercise 1

TEST_CASE("Recursive Letter Counter Tests", "[countLetter]") {
    SECTION("Basic functionality") {
        REQUIRE(countLetter("hello", 'l') == 2);
        REQUIRE(countLetter("hello", 'o') == 1);
        REQUIRE(countLetter("hello", 'x') == 0);
    }

    SECTION("Empty string") {
        REQUIRE(countLetter("", 'a') == 0);
    }

    SECTION("Case sensitivity") {
        REQUIRE(countLetter("AAA", 'a') == 0);
        REQUIRE(countLetter("aAaA", 'A') == 2);
        REQUIRE(countLetter("aAaA", 'a') == 2);
    }

    SECTION("Special characters and spaces") {
        REQUIRE(countLetter("Hello, World!", ',') == 1);
        REQUIRE(countLetter("  ", ' ') == 2);
        REQUIRE(countLetter("!@#$%^&*()", '#') == 1);
    }

    SECTION("Single character strings") {
        REQUIRE(countLetter("a", 'a') == 1);
        REQUIRE(countLetter("b", 'a') == 0);
    }

    SECTION("Repeated characters") {
        REQUIRE(countLetter("aaaaaa", 'a') == 6);
        REQUIRE(countLetter("abababab", 'a') == 4);
        REQUIRE(countLetter("abababab", 'b') == 4);
    }

    SECTION("Long strings") {
        std::string longString(1000, 'a');
        REQUIRE(countLetter(longString, 'a') == 1000);
        REQUIRE(countLetter(longString, 'b') == 0);
    }

    SECTION("Mixed case and punctuation") {
        REQUIRE(countLetter("The Quick Brown Fox Jumps Over The Lazy Dog.", 'o') == 3);
        REQUIRE(countLetter("The Quick Brown Fox Jumps Over The Lazy Dog.", 'T') == 2);
        REQUIRE(countLetter("The Quick Brown Fox Jumps Over The Lazy Dog.", '.') == 1);
    }

    SECTION("Numeric characters") {
        REQUIRE(countLetter("123454321", '3') == 2);
        REQUIRE(countLetter("123454321", '1') == 2);
        REQUIRE(countLetter("123454321", '0') == 0);
    }
}
